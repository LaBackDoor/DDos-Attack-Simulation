# tasks/reboot_cleanup.yml
---
# First handle the monitor node
- name: Check for running tcpdump processes on monitor
  shell: "pgrep tcpdump || echo 'No tcpdump'"
  delegate_to: "{{ groups['monitor'][0] }}"
  register: tcpdump_check
  ignore_errors: true

- name: Kill any running tcpdump processes on monitor
  shell: "pkill tcpdump"
  delegate_to: "{{ groups['monitor'][0] }}"
  when: "'No tcpdump' not in tcpdump_check.stdout"
  ignore_errors: true

# Then handle all subnet_a hosts
- name: Check for running processes on subnet hosts
  shell: "pgrep {{ item }} || echo 'No {{ item }}'"
  delegate_to: "{{ host }}"
  with_items:
    - hping3
    - attack.sh
    - normal.sh
  loop_control:
    loop_var: item
  register: process_check
  with_items: "{{ groups['subnet_a'] }}"
  loop_control:
    loop_var: host
  ignore_errors: true

- name: Kill running processes on subnet hosts
  shell: |
    pkill {{ item[0] }} || true
    sleep 2
    pkill -9 {{ item[0] }} || true
  delegate_to: "{{ item[1] }}"
  with_nested:
    - ['hping3', 'attack.sh', 'normal.sh']
    - "{{ groups['subnet_a'] }}"
  ignore_errors: true

- name: Wait for processes to stop
  pause:
    seconds: 5

- name: Reboot monitor node
  reboot:
    msg: "Rebooting to clean up stuck processes"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami
  delegate_to: "{{ groups['monitor'][0] }}"
  ignore_errors: true

- name: Reboot subnet hosts
  reboot:
    msg: "Rebooting to clean up stuck processes"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: whoami
  delegate_to: "{{ item }}"
  with_items: "{{ groups['subnet_a'] }}"
  ignore_errors: true

- name: Wait for monitor to come back
  wait_for_connection:
    delay: 10
    timeout: 300
  delegate_to: "{{ groups['monitor'][0] }}"
  ignore_errors: true

- name: Wait for subnet hosts to come back
  wait_for_connection:
    delay: 10
    timeout: 300
  delegate_to: "{{ item }}"
  with_items: "{{ groups['subnet_a'] }}"
  ignore_errors: true

- name: Final process check on monitor
  shell: "pgrep tcpdump || echo 'No tcpdump'"
  delegate_to: "{{ groups['monitor'][0] }}"
  register: final_monitor_check
  ignore_errors: true

- name: Final process check on subnet hosts
  shell: "pgrep {{ item[0] }} || echo 'No {{ item[0] }}'"
  delegate_to: "{{ item[1] }}"
  with_nested:
    - ['hping3', 'attack.sh', 'normal.sh']
    - "{{ groups['subnet_a'] }}"
  register: final_host_check
  ignore_errors: true