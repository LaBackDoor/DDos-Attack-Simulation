# tasks/packet_capture.yml
---
- name: "Ensure PCAP directory exists with correct permissions"
  file:
    path: "/var/log/pcap"
    state: directory
    mode: '0755'
    owner: cybears
    group: cybears
  delegate_to: "{{ item }}"
  with_items: "{{ groups['webservers'] }}"
  become: true

- name: "Set proper permissions for error log"
  file:
    path: "/var/log/pcap/tcpdump_error.log"
    state: touch
    mode: '0644'
    owner: cybears
    group: cybears
  delegate_to: "{{ item }}"
  with_items: "{{ groups['webservers'] }}"
  become: true

- name: "Generate PCAP filename for each server"
  set_fact:
    pcap_filename: "ddos_{{ simulation_start }}_{{ intensity }}_{{ cycle_timestamp }}_{{ ansible_host }}.pcap"
  delegate_to: "{{ item }}"
  with_items: "{{ groups['webservers'] }}"

- name: "Kill any existing tcpdump processes"
  shell: "pkill tcpdump || true"
  delegate_to: "{{ item }}"
  with_items: "{{ groups['webservers'] }}"
  become: true
  ignore_errors: true

- name: "Wait for processes to stop"
  pause:
    seconds: 2

- name: Get tcpdump path
  command: which tcpdump
  register: tcpdump_path
  changed_when: false

- name: "Start tcpdump on each web server"
  shell: |
    nohup {{ tcpdump_path.stdout }} -i any -s 0 -n -B 4096 \
    'tcp and port 80 and host 10.0.1.1 and src net 10.0.1.160/28' \
    -w '/var/log/pcap/{{ pcap_filename }}' \
    -v 2>/var/log/pcap/tcpdump_error.log &
    echo $! > /var/log/pcap/tcpdump.pid
  delegate_to: "{{ item }}"
  with_items: "{{ groups['webservers'] }}"
  become: true
  async: 86400
  poll: 0

- name: "Wait for tcpdump to start"
  pause:
    seconds: 3

- name: "Check tcpdump error log"
  shell: "cat /var/log/pcap/tcpdump_error.log"
  register: tcpdump_errors
  delegate_to: "{{ item }}"
  with_items: "{{ groups['webservers'] }}"
  become: true
  ignore_errors: true

- name: "Verify tcpdump is running"
  shell: |
    pgrep -f "tcpdump.*{{ pcap_filename }}" || 
    (cat /var/log/pcap/tcpdump_error.log && exit 1)
  register: tcpdump_check
  delegate_to: "{{ item }}"
  with_items: "{{ groups['webservers'] }}"
  become: true
  retries: 3
  delay: 5
  until: tcpdump_check.rc == 0

- name: "Record capture start"
  lineinfile:
    path: "{{ log_dir }}/master_sim_{{ simulation_start }}.log"
    line: "Packet capture started at {{ '%Y-%m-%d %H:%M:%S' | strftime }} on {{ item }} - File: {{ pcap_filename }}"
    insertafter: EOF
  with_items: "{{ groups['webservers'] }}"
  become: true