# tasks/packet_capture.yml
---
- name: "Ensure PCAP directory exists with proper permissions"
  file:
    path: "/var/log/pcap"
    state: directory
    mode: '0755'
    owner: root
    group: root
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true

- name: "Generate PCAP filename"
  set_fact:
    pcap_filename: "ddos_{{ intensity }}_{{ cycle_timestamp }}_{{ attacker_count }}-attackers.pcap"

- name: "Start tcpdump with verbose output"
  shell: |
    nohup tcpdump -i any -w '/var/log/pcap/{{ pcap_filename }}' 2>/var/log/pcap/tcpdump_error.log &
    echo $! > /var/log/pcap/tcpdump.pid
  async: 3600
  poll: 0
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true
  register: tcpdump_job

- name: "Wait for tcpdump to start"
  pause:
    seconds: 2

- name: "Check tcpdump error log"
  shell: "cat /var/log/pcap/tcpdump_error.log"
  register: tcpdump_errors
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true
  ignore_errors: true

- name: "Debug tcpdump errors"
  debug:
    msg: "Tcpdump errors: {{ tcpdump_errors.stdout }}"

- name: "Verify tcpdump is running"
  shell: "ps aux | grep '[t]cpdump'"
  register: tcpdump_check
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true
  retries: 3
  delay: 2
  until: tcpdump_check.rc == 0

- name: "Record capture start"
  lineinfile:
    path: "{{ log_dir }}/ddos_sim_{{ cycle_timestamp }}.log"
    line: "Packet capture started at {{ '%Y-%m-%d %H:%M:%S' | strftime }} - File: {{ pcap_filename }}"
    insertafter: EOF
  become: true