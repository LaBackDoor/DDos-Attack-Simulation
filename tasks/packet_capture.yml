# tasks/packet_capture.yml
---
- name: "Ensure PCAP directory exists with correct permissions"
  file:
    path: "/var/log/pcap"
    state: directory
    mode: '0755'
    owner: cybears
    group: cybears
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true

- name: "Set proper permissions for error log"
  file:
    path: "/var/log/pcap/tcpdump_error.log"
    state: touch
    mode: '0644'
    owner: cybears
    group: cybears
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true

- name: "Generate PCAP filename"
  set_fact:
    pcap_filename: "ddos_{{ simulation_start }}_{{ intensity }}_{{ cycle_timestamp }}_{{ attacker_count }}-attackers.pcap"

- name: "Start tcpdump on ens192"
  shell: |
    nohup tcpdump -i ens192 -s 0 -n -B 4096 \
    '((tcp and (port 80 or port 443)) or (tcp and (tcp[tcpflags] & (tcp-syn|tcp-ack|tcp-push|tcp-rst) != 0))) and (net 10.0.1.0/24 or net 10.0.2.0/24 or net 10.0.3.0/24)' \
    -w '/var/log/pcap/{{ pcap_filename }}' \
    -v 2>/var/log/pcap/tcpdump_error.log &
    echo $! > /var/log/pcap/tcpdump.pid
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true
  async: 86400
  poll: 0
  register: tcpdump_job

- name: "Wait for tcpdump to start"
  pause:
    seconds: 2

- name: "Check tcpdump error log"
  shell: "cat /var/log/pcap/tcpdump_error.log"
  register: tcpdump_errors
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true
  ignore_errors: true

- name: "Verify tcpdump is running"
  shell: "ps aux | grep -v grep | grep tcpdump"
  register: tcpdump_check
  delegate_to: "{{ groups['monitor'][0] }}"
  become: true
  retries: 3
  delay: 2
  until: tcpdump_check.rc == 0

- name: "Record capture start"
  lineinfile:
    path: "{{ log_dir }}/master_sim_{{ simulation_start }}.log"
    line: "Packet capture started at {{ '%Y-%m-%d %H:%M:%S' | strftime }} - File: {{ pcap_filename }} on interface ens192 with buffer size 4096"
    insertafter: EOF
  become: true