# tasks/cleanup_tasks.yml
---
- name: "Pre-cleanup connection check"
  wait_for:
    timeout: 5
  run_once: true

- name: "Stop normal traffic processes with connection persistence"
  shell: |
    nohup bash -c '
    pkill -f normal.sh
    sleep 2
    pkill -9 -f normal.sh
    ' >/dev/null 2>&1 &
  delegate_to: "{{ item }}"
  ignore_errors: yes
  with_items: "{{ normal_hosts }}"
  become: true
  async: 30
  poll: 0

- name: "Stop attack processes with connection persistence"
  shell: |
    nohup bash -c '
    pkill -f attack.sh
    sleep 2
    pkill -9 -f attack.sh
    ' >/dev/null 2>&1 &
  delegate_to: "{{ item }}"
  ignore_errors: yes
  with_items: "{{ attacker_hosts }}"
  become: true
  async: 30
  poll: 0

- name: "Stop tcpdump process"
  shell: |
    pkill tcpdump
    sleep 2
    pkill -9 tcpdump || true
  delegate_to: "{{ groups['monitor'][0] }}"
  ignore_errors: yes
  become: true

- name: "Wait for processes to stop"
  wait_for:
    timeout: 10

- name: "Get PCAP information"
  stat:
    path: "/var/log/pcap/{{ pcap_filename }}"
  delegate_to: "{{ groups['monitor'][0] }}"
  register: pcap_info
  become: true

- name: "Record cycle completion"
  lineinfile:
    path: "{{ log_dir }}/master_sim_{{ simulation_start }}.log"
    line: |
      
      =====================================
      Cycle Complete
      =====================================
      PCAP File: {{ pcap_filename }}
      Size: {{ (pcap_info.stat.size | default(0) / 1024 / 1024) | round(2) }} MB
      End Time: {{ '%Y-%m-%d %H:%M:%S' | strftime }}
      =====================================
    insertafter: EOF
  become: true
  when: pcap_info.stat is defined and pcap_info.stat.exists